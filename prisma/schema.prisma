// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

  datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Room {
  id          String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  apiToken    String   @unique
  groupName   String
  created     DateTime @default(now())
  adminUserId String   @db.Uuid
  adminUser   AdminUser @relation(fields: [adminUserId], references: [id])
  roomUrlId   String   @unique
  password    String
  // RoomTaskとのリレーション
  roomTasks   RoomTask[]
}

model Task {
  id        Int      @id @default(autoincrement())
  date      DateTime
  task      String
  // RoomTaskとのリレーション
  roomTasks RoomTask[]

  // Notificationとのリレーション
  notifications Notification[]
}

model AdminUser {
  id    String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  email String
  supabaseUserId String @unique
  // Roomとのリレーション
  rooms Room[]
}

model RoomTask {
  roomId String @db.Uuid
  taskId Int

  // Roomとのリレーション
  room   Room @relation(fields: [roomId], references: [id])

  // Taskとのリレーション
  task   Task @relation(fields: [taskId], references: [id])

  @@id([roomId, taskId]) // 複合主キー
}

model Notification {
  id               Int      @id @default(autoincrement())
  taskId           Int

  // Taskとのリレーション
  task Task @relation(fields: [taskId], references: [id])

  // Scheduleとのリレーション
  schedules Schedule[]

}

model Schedule {
  id          Int  @id @default(autoincrement())
  daysBefore  Int
  hour        Int
  notificationId Int
  notification   Notification @relation(fields: [notificationId], references: [id])
}